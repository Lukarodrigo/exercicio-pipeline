name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  read_values:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: get_variables
        run: echo "Luka"
  build_app:
    runs-on: ubuntu-latest
    needs: read_values
    steps:
      -
        name: Checkout 
        uses: actions/checkout@v3
      -
        name: Login_Docker_Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}  
      -
        name: Set_Docker_Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build_push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/exercicio-pipeline:v1
  scan_security:
    runs-on: ubuntu-latest
    needs: build_app
    steps:        
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      #- name: Prepare cache
      #  uses: actions/cache@v2
      #  with:
      #    path: ~/.npm
      #    key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #    restore-keys: |
      #      ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm run audit
      #  run: npm run test:ci      
  create_artifactory:
    runs-on: ubuntu-latest
    needs: scan_security
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
      - name: Display structure of downloaded files
        run: ls -R  
      #- name: 'Tar files'
      #  run: tar -cvf exercicio.tar /path/to/my/directory
      #- uses: actions/upload-artifact@v2
      #- name: 'Upload Artifact'
      #  with:
      #    name: my-artifact
      #    path: my_files.tar